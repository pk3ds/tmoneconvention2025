import{z as u,K as c,f as t,g as s,p,x as d,I as m,M as g,N as f,r as _,o as y,O as k,P as x}from"./@vue-r-HUGdoc.js";const v={class:"text-sm text-red-600 dark:text-red-400"},V={__name:"InputError",props:{message:{type:String}},setup(e){return(a,r)=>u((t(),s("div",null,[p("p",v,d(e.message),1)],512)),[[c,e.message]])}},b={class:"block font-medium text-sm text-gray-700 dark:text-gray-300"},h={key:0},S={key:1},I={__name:"InputLabel",props:{value:{type:String}},setup(e){return(a,r)=>(t(),s("label",b,[e.value?(t(),s("span",h,d(e.value),1)):(t(),s("span",S,[m(a.$slots,"default")]))]))}},M=["type"],w={__name:"TextInput",props:g({type:{type:String,default:"text"}},{modelValue:{type:String,required:!0},modelModifiers:{}}),emits:["update:modelValue"],setup(e,{expose:a}){const r=f(e,"modelValue"),o=_(null);return y(()=>{o.value.hasAttribute("autofocus")&&o.value.focus()}),a({focus:()=>o.value.focus()}),(l,n)=>u((t(),s("input",x({type:e.type,class:"border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm","onUpdate:modelValue":n[0]||(n[0]=i=>r.value=i),ref_key:"input",ref:o},l.$attrs),null,16,M)),[[k,r.value]])}};export{I as _,w as a,V as b};
